{"version":3,"sources":["components/helperfunctions/HelperFunctions.jsx","components/barviz/BarViz.jsx","components/explainview/ExplainView.jsx","components/expandview/ExpandView.jsx","components/queryview/QueryView.jsx","components/header/Header.jsx","components/footer/Footer.jsx","components/testview/TestView.jsx","components/Main.js","serviceWorker.js","index.js"],"names":["abbreviateString","value","maxLength","length","substring","postJSONData","url","postData","fetch","method","body","JSON","stringify","headers","then","response","status","console","log","Promise","reject","json","data","catch","err","LeaderLine","window","animOptions","duration","timing","BarViz","props","createSVGBox","selector","height","d3","append","attr","chartWidth","chartMargin","left","right","top","bottom","createBarRects","svg","x","y","chartclass","transparency","selectAll","join","d","i","getLabel","gradient","bandwidth","grads","gradients","minChartHeight","minChartWidth","brushHeight","barColor","inactiveColor","initialBrushPercentage","token","toFixed","prevProps","prevState","self","this","chartHeight","xScale","domain","map","range","yScale","nice","brushXScale","copy","brushYScale","mainXZoom","brush","extent","on","extentX","selection","selected","filter","select","style","indexOf","updateScalePostBrush","update","defaultSelection","originalRange","paddingInner","call","move","tooltip","setupScalesAxes","bar","xPosition","yPosition","text","node","getComputedTextLength","createToolTip","document","getElementById","width","drawGraph","drawBrushGraph","className","id","Component","ExplainView","state","minCharWidth","setState","offsetWidth","denseViz","xdata","xindex","backgroundColor","key","Tabs","type","Tab","label","ExpandView","showInfoModal","blueColor","greyColor","removeAllLines","drawLines","viewChanged","redrawAllLines","e","addQueryTerm","target","innerHTML","startElement","endElement","startAnchor","endAnchor","lineColor","line","pointAnchor","color","startPlug","endPlug","startPlugColor","endSocketGravity","path","size","hide","animationDuration","show","lineHolder","push","forEach","each","remove","position","attributeName","attributeValue","querySelector","topAnchor","bottomAnchor","leftAnchor","rightAnchor","expansions","ex","expansion","startId","token_index","endId","startEl","getElement","endEl","drawLeaderLine","suggestedTermList","terms","index","expansionTermsList","expansionData","onClick","clickTerm","bind","boxColor","pos","pos_desc","toUpperCase","named_entity","ent_desc","Modal","open","modalHeading","passiveModal","aria-label","modalAriaLabel","onRequestClose","clickInfo","hasScrollingContent","href","took","QueryView","options","apptitle","intro","title","appsubtitle","subtitle","passages","highlights","answers","passageIsLoading","answerIsLoading","errorStatus","maxdocuments","reader","fragmentsize","chunkStride","stride","retriever","expander","relsnip","sampleQA","samples","selectedExplanation","selectedSampleIndex","explanations","showAdvancedView","showExplanationsView","views","showPassagesView","showExpander","expansionterms","Set","openAdvancedConfigDrawer","showSamples","showAllAnswers","allanswers","showIntro","showExplainerModal","serverBasePath","passageEndpoint","answerEndpoint","explainEndpoint","expandEndpoint","interfaceTimedDelay","maxStatusElasped","documentTitleLength","advancedOptionsDescriptions","description","askQuestion","resetExplanations","question","context","max_documents","query","fragment_size","tokenstride","Array","from","getPassages","getAnswers","lastAsked","Date","setTimeout","errormsg","keyCode","getAttribute","selectedAnswerId","answerData","explanationHolder","getExplanation","getExpansion","configType","selectedIndex","selectedValue","resetAnswer","option","defaultValue","selectItems","SelectItem","name","Select","hideLabel","onChange","updateConfigSelectParams","term","has","opacity","add","delete","snapshot","loadingStatus","infoBox","dangerouslySetInnerHTML","__html","documents","documentList","dataTitle","answerList","slice","probability","answer","Button","clickExplainButton","qaSamples","qindex","clickSampleQuestion","askedElapsed","configBar","ref","zIndex","getOptionItems","removeTermClick","termvalue","advanced","Toggle","labelA","labelB","defaultToggled","onToggle","toggleAdvancedOptions","toggleSearchConfig","TextInput","labelText","onKeyDown","inputKeyPress","placeholder","expandButtonClick","askQuestionButtonClick","TextArea","Loading","active","small","withOverlay","Header","appName","appname","appDescription","appdescription","src","alt","Footer","TestView","require","barVizWidth","history","createBrowserHistory","basename","forceRefresh","keyLength","getUserConfirmation","message","callback","confirm","listen","location","linkHolder","updateLh","hash","Main","config","protocol","host","configEndpoint","configUrl","header","queryview","disclaimer","port","username","password","fields","body_field","readtopn","exact","component","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.32abfeaf.chunk.js","sourcesContent":["export function abbreviateString(value, maxLength) {\n  if (value.length <= maxLength) {\n    return value;\n  } else {\n    let retval = value.substring(0, maxLength) + \"..\";\n    return retval;\n  }\n}\n\nfunction intlFormat(num) {\n  return new Intl.NumberFormat().format(Math.round(num * 10) / 10);\n}\nexport function makeFriendly(num) {\n  if (num < 1 && num > 0) {\n    return num;\n  }\n  if (Math.abs(num) >= 1000000) return intlFormat(num / 1000000) + \"M\";\n  if (Math.abs(num) >= 1000) return intlFormat(num / 1000) + \"k\";\n  return intlFormat(num);\n}\n\nexport function getJSONData(url) {\n  return fetch(url)\n    .then(function (response) {\n      if (response.status !== 200) {\n        console.log(\n          \"Looks like there was a problem. Status Code: \" + response.status\n        );\n        return Promise.reject(response.status);\n      }\n      return response.json().then(function (data) {\n        return data;\n      });\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nexport function postJSONData(url, postData) {\n  return fetch(url, {\n    method: \"post\",\n    body: JSON.stringify(postData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then(function (response) {\n      if (response.status !== 200) {\n        console.log(\n          \"Looks like there was a problem. Status Code: \" + response.status\n        );\n        return Promise.reject(response.status);\n      }\n      return response.json().then(function (data) {\n        return data;\n      });\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nexport function sampleConfig() {\n  return {\n    header: {\n      appname: \"NeuralQA\",\n      appdescription: \"Question Answering on Large Datasets\",\n    },\n    queryview: {\n      intro: {\n        title: \"NeuralQA: Question Answering on Large Datasets\",\n        subtitle:\n          \"NeuralQA is an interactive tool for question answering (passage retrieval + document reading). You can manually provide a passage or select a search index from (e.g. case.law ) dataset under the QA configuration settings below. To begin, type in a question query below.\",\n        disclaimer: \" .. \",\n      },\n      views: {\n        intro: true,\n        advanced: true,\n        samples: true,\n        passages: true,\n        explanations: true,\n        allanswers: false,\n        expander: false,\n      },\n      options: {\n        stride: {\n          title: \"Token Stride\",\n          selected: 0,\n          options: [\n            { name: 0, value: 0 },\n            { name: 50, value: 50 },\n            { name: 100, value: 100 },\n            { name: 200, value: 200 },\n          ],\n        },\n        maxdocuments: {\n          title: \"Max Documents\",\n          selected: 5,\n          options: [\n            { name: 5, value: 5 },\n            { name: 10, value: 10 },\n            { name: 15, value: 15 },\n          ],\n        },\n        fragmentsize: {\n          title: \"Fragment Size\",\n          selected: 350,\n          options: [\n            { name: 350, value: 350 },\n            { name: 450, value: 450 },\n            { name: 650, value: 650 },\n            { name: 850, value: 850 },\n          ],\n        },\n        relsnip: {\n          title: \"Relsnip\",\n          selected: true,\n          options: [\n            { name: true, value: true },\n            { name: false, value: false },\n          ],\n        },\n        samples: [\n          {\n            question: \"what is the goal of the fourth amendment?  \",\n            context:\n              \"The Fourth Amendment of the U.S. Constitution provides that the right of the people to be secure in their persons, houses, papers, and effects, against unreasonable searches and seizures, shall not be violated, and no Warrants shall issue, but upon probable cause, supported by Oath or affirmation, and particularly describing the place to be searched, and the persons or things to be seized.'The ultimate goal of this provision is to protect people’s right to privacy and freedom from unreasonable intrusions by the government. However, the Fourth Amendment does not guarantee protection from all searches and seizures, but only those done by the government and deemed unreasonable under the law.\",\n          },\n          {\n            question:\n              \"Who was the first woman to serve on the supreme court in America\",\n            context:\n              \"Sandra Day O’Connor, née Sandra Day, (born March 26, 1930, El Paso, Texas, U.S.), associate justice of the Supreme Court of the United States from 1981 to 2006. She was the first woman to serve on the Supreme Court. A moderate conservative, she was known for her dispassionate and meticulously researched opinions. Sandra Day grew up on a large family ranch near Duncan, Arizona. She received undergraduate (1950) and law (1952) degrees from Stanford University, where she met the future chief justice of the United States William Rehnquist.\",\n          },\n          {\n            question: \"Where did Sandra Day grow up?\",\n            context:\n              \"Sandra Day O’Connor, née Sandra Day, (born March 26, 1930, El Paso, Texas, U.S.), associate justice of the Supreme Court of the United States from 1981 to 2006. She was the first woman to serve on the Supreme Court. A moderate conservative, she was known for her dispassionate and meticulously researched opinions. Sandra Day grew up on a large family ranch near Duncan, Arizona. She received undergraduate (1950) and law (1952) degrees from Stanford University, where she met the future chief justice of the United States William Rehnquist.\",\n          },\n        ],\n        expander: {\n          title: \"Expander\",\n          selected: \"none\",\n          options: [{ name: \"None\", value: \"none\", type: \"none\" }],\n        },\n        reader: {\n          title: \"Reader\",\n          selected: \"twmkn9/distilbert-base-uncased-squad2\",\n          options: [\n            {\n              name: \"DistilBERT SQUAD2\",\n              value: \"twmkn9/distilbert-base-uncased-squad2\",\n              type: \"distilbert\",\n            },\n            {\n              name: \"BERT SQUAD2\",\n              value: \"deepset/bert-base-cased-squad2\",\n              type: \"bert\",\n            },\n          ],\n        },\n        retriever: {\n          title: \"Retriever\",\n          selected: \"none\",\n          options: [\n            { name: \"None\", value: \"none\", type: \"none\" },\n            {\n              name: \"Case Law\",\n              value: \"cases\",\n              host: \"localhost\",\n              port: 9200,\n              username: \"None\",\n              password: \"None\",\n              type: \"elasticsearch\",\n              fields: { body_field: \"casebody.data.opinions.text\" },\n            },\n          ],\n          readtopn: 0,\n        },\n      },\n    },\n  };\n}\n\nexport const LeaderLine = window.LeaderLine;\nexport const animOptions = { duration: 800, timing: \"ease\" };\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./barviz.css\";\n\nclass BarViz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.grads = props.data.gradients;\n\n    // this.minChartWidth = 900;\n    this.minChartHeight = 250;\n    this.minChartWidth = this.props.minChartWidth || 800;\n\n    this.brushHeight = 60;\n    this.barColor = \"#0062ff\";\n    this.inactiveColor = \"rgba(85, 85, 85, 0.586)\";\n    this.initialBrushPercentage = 35 / this.grads.length;\n\n    // window.addEventListener(\"resize\", handleResize);\n  }\n\n  getLabel(d, i) {\n    return i + \"*.*\" + d.token + \" *.* (\" + d.gradient.toFixed(2) + \")\";\n  }\n\n  componentWillUnmount() {}\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  setupScalesAxes(data) {\n    let self = this;\n    this.chartMargin = { top: 5, right: 0, bottom: 0, left: 0 };\n    this.chartWidth =\n      this.minChartWidth - this.chartMargin.left - this.chartMargin.right;\n    this.chartHeight =\n      this.minChartHeight - this.chartMargin.top - this.chartMargin.bottom;\n    this.xScale = d3\n      .scaleBand()\n      .domain(data.map((d, i) => self.getLabel(d, i)))\n      .range([this.chartMargin.left, this.chartWidth - this.chartMargin.right]);\n\n    this.yScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(data, (d) => d.gradient)])\n      .nice()\n      .range([this.chartHeight, 0]);\n  }\n\n  createSVGBox = (selector, height) => {\n    return d3\n      .select(selector)\n      .append(\"svg\")\n      .attr(\n        \"width\",\n        this.chartWidth + this.chartMargin.left + this.chartMargin.right\n      )\n      .attr(\"height\", height + this.chartMargin.top + this.chartMargin.bottom)\n      .append(\"g\")\n      .attr(\n        \"transform\",\n        \"translate(\" + this.chartMargin.left + \",\" + this.chartMargin.top + \")\"\n      );\n  };\n  createBarRects = (svg, x, y, data, chartclass, transparency) => {\n    svg\n      .append(\"g\")\n      .attr(\"class\", chartclass)\n      .selectAll(\"rect\")\n      .data(data)\n      .join(\"rect\")\n      .attr(\"x\", (d, i) => x(this.getLabel(d, i)))\n      .attr(\"y\", (d) => y(d.gradient))\n      .attr(\"height\", (d) => y(0) - y(d.gradient))\n      .attr(\"width\", x.bandwidth())\n      .attr(\"class\", transparency ? \"strokedbarrect\" : \"\")\n      .attr(\n        \"fill\",\n        (d) => \"rgba(0, 98, 255, \" + (transparency ? d.gradient : 1) + \")\"\n      );\n  };\n\n  drawBrushGraph(data) {\n    let self = this;\n    this.brushXScale = this.xScale.copy();\n    this.brushYScale = this.yScale.copy().range([this.brushHeight, 0]);\n    const x = this.brushXScale;\n    const y = this.brushYScale;\n    const mainXZoom = d3\n      .scaleLinear()\n      .range([this.chartMargin.left, this.chartWidth - this.chartMargin.right])\n      .domain([\n        this.chartMargin.left,\n        this.chartWidth - this.chartMargin.right,\n      ]);\n\n    const svg = this.createSVGBox(\"div.d3brush\", this.brushHeight);\n\n    this.createBarRects(svg, x, y, data, \"minibars\", false);\n    const brush = d3\n      .brushX()\n      .extent([\n        [this.chartMargin.left, 0.5],\n        [this.chartWidth - this.chartMargin.right, this.brushHeight],\n      ])\n      .on(\"brush\", brushed)\n      .on(\"start\", brushStarted)\n      .on(\"end\", brushEnded);\n\n    const defaultSelection = [\n      x.range()[0],\n      (x.range()[1] - x.range()[0]) * self.initialBrushPercentage,\n    ];\n\n    svg.append(\"g\").call(brush).call(brush.move, defaultSelection);\n\n    function brushStarted() {\n      // console.log(\"brush started\");\n      d3.select(\"div.barviz\")\n        .selectAll(\"text.textlabel\")\n        .attr(\"class\", \"textinvisible textlabel\");\n    }\n    function brushEnded() {\n      d3.select(\"div.barviz\")\n        .selectAll(\"text.textlabel\")\n        .attr(\"class\", \"textlabel\");\n      const extentX = d3.event.selection;\n      // console.log(\"brush ended\", extentX);\n      if (extentX) {\n        // const selected = x\n        //   .domain()\n        //   .filter(\n        //     (d) =>\n        //       extentX[0] - x.bandwidth() + 1e-2 <= x(d) &&\n        //       x(d) <= extentX[1] - 1e-2\n        //   );\n\n        updateScalePostBrush(extentX);\n\n        const svg = d3.select(\"div.barviz\");\n        svg\n          .selectAll(\"text.textlabel\")\n          .data(data)\n          .attr(\"x\", (d, i) => {\n            return (\n              self.xScale(self.getLabel(d, i)) + self.xScale.bandwidth() / 2\n            );\n          })\n          .attr(\"y\", (d) => {\n            return self.yScale.range()[0];\n          });\n      }\n    }\n\n    function brushed() {\n      const extentX = d3.event.selection;\n      const selected = x\n        .domain()\n        .filter(\n          (d) =>\n            extentX[0] - x.bandwidth() + 1e-2 <= x(d) &&\n            x(d) <= extentX[1] - 1e-2\n        );\n\n      d3.select(\"div.d3brush\")\n        .select(\".minibars\")\n        .selectAll(\"rect\")\n        .style(\"fill\", (d, i) => {\n          return selected.indexOf(self.getLabel(d, i)) > -1\n            ? self.barColor\n            : self.inactiveColor;\n        });\n\n      updateScalePostBrush(extentX);\n      update(self.grads);\n    }\n\n    function updateScalePostBrush(extentX) {\n      let originalRange = mainXZoom.range();\n      mainXZoom.domain(extentX);\n\n      self.xScale.domain(data.map((d, i) => self.getLabel(d, i)));\n      self.xScale\n        .range([mainXZoom(originalRange[0]), mainXZoom(originalRange[1])])\n        .paddingInner(0.1);\n    }\n\n    function update(data) {\n      const x = self.xScale;\n      const y = self.yScale;\n      const svg = d3.select(\"div.barviz\");\n      svg\n        .selectAll(\"rect.mainbars\")\n        .data(data)\n        .join(\"rect\")\n        .attr(\"x\", (d, i) => x(self.getLabel(d, i)))\n        .attr(\"y\", (d) => y(d.gradient))\n        .attr(\"height\", (d) => y(0) - y(d.gradient))\n        .attr(\"width\", x.bandwidth());\n    }\n  }\n\n  createToolTip(svg) {\n    // create tooltip\n    let tooltip = svg\n      .append(\"g\")\n      .attr(\"class\", \"tooltiptext\")\n      .style(\"display\", \"none\");\n\n    tooltip.append(\"rect\").attr(\"class\", \"tooltiprect\");\n\n    tooltip.append(\"text\").attr(\"x\", 10).attr(\"dy\", \"1.2em\");\n    // .style(\"text-anchor\", \"middle\");\n\n    return tooltip;\n  }\n\n  drawGraph(data) {\n    let self = this;\n    this.setupScalesAxes(data);\n    const x = this.xScale;\n    const y = this.yScale;\n\n    const svg = this.createSVGBox(\"div.barviz\", this.chartHeight);\n    const bar = svg.selectAll(\"g\").data(data).join(\"g\");\n\n    bar\n      .append(\"rect\")\n      .attr(\"class\", \"strokedbarrect mainbars\")\n      .attr(\n        \"fill\",\n        (d) =>\n          \"rgba(0, 98, 255, \" +\n          (d.gradient > 0.5 ? 1 : 0.5 + 0.5 * d.gradient) +\n          \")\"\n      )\n      .attr(\"width\", x.bandwidth())\n      .attr(\"height\", (d) => y(0) - y(d.gradient))\n      .on(\"mouseover\", function () {\n        tooltip.style(\"display\", null);\n        d3.select(this).attr(\"fill\", \"lightgrey\");\n      })\n      .on(\"mouseout\", function (d) {\n        tooltip.style(\"display\", \"none\");\n        d3.select(this).attr(\n          \"fill\",\n          \"rgba(0, 98, 255, \" +\n            (d.gradient > 0.5 ? 1 : 0.5 + 0.5 * d.gradient) +\n            \")\"\n        );\n      })\n      .on(\"mousemove\", function (d) {\n        var xPosition = d3.mouse(this)[0] + 10;\n        var yPosition = d3.mouse(this)[1] - 20;\n        tooltip.attr(\n          \"transform\",\n          \"translate(\" + xPosition + \",\" + yPosition + \")\"\n        );\n        tooltip.select(\"text\").text(d.token);\n        tooltip\n          .select(\"rect\")\n          .attr(\n            \"width\",\n            tooltip.select(\"text\").node().getComputedTextLength() + 20\n          );\n      });\n\n    bar\n      .append(\"text\")\n      // .attr(\"fill\", \"white\")\n      .attr(\"x\", (d, i) => {\n        return x(self.getLabel(d, i));\n      })\n      .attr(\"y\", (d) => y(d.gradient))\n      .attr(\"class\", \"textlabel\")\n      .text((d) => d.token);\n\n    let tooltip = this.createToolTip(svg);\n  }\n\n  componentDidMount() {\n    let barvizElement = document.getElementById(\"barviz\");\n    barvizElement.style.width = this.minChartWidth + \"px\";\n\n    this.drawGraph(this.grads);\n    this.drawBrushGraph(this.grads);\n  }\n\n  render() {\n    return (\n      <div className=\" barvizcontent \">\n        <div className=\" \">\n          <div id=\"barviz\" className=\"barviz \"></div>\n          <div id=\"d3brush\" className=\"d3brush  \"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BarViz;\n","import React, { Component } from \"react\";\nimport { Tabs, Tab } from \"carbon-components-react\";\nimport \"./explainview.css\";\nimport BarViz from \"../barviz/BarViz\";\n\nclass ExplainView extends Component {\n  constructor(props) {\n    super(props);\n\n    // console.log(props);\n    this.state = {\n      minCharWidth: null,\n    };\n  }\n\n  getLabel(d, i) {\n    return i + \"*.*\" + d.token + \" *.* (\" + d.gradient.toFixed(2) + \")\";\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // this.data = prevProps.explanationData;\n    // if (\n    //   prevProps.explanationData &&\n    //   prevProps.explanationData.answer !== this.state.data.answer\n    // ) {\n    //   console.log(\"updating .. \", this.data);\n    //   this.updateGraph(this.data.gradients);\n    //   this.setState({\n    //     data: prevProps.explanationData,\n    //   });\n    // }\n    // // this.setState({\n    // //   data: prevProps.explanationData[prevProps.selectedExplanation],\n    // // });\n  }\n\n  componentDidMount() {\n    this.setState({\n      minCharWidth: document.getElementById(\"barvizcontainer\").offsetWidth - 40,\n    });\n  }\n  render() {\n    const denseViz = this.props.data.gradients.map((xdata, xindex) => {\n      return (\n        <span\n          style={{\n            backgroundColor: \"rgba(0, 98, 255, \" + xdata.gradient + \")\",\n          }}\n          className=\"explanationspan \"\n          key={\"expspan\" + xindex}\n        >\n          {xdata.token} &nbsp;\n        </span>\n      );\n    });\n\n    return (\n      <div className=\"expview \">\n        <Tabs id=\"barvizcontainer\" type=\"default\" selected={0}>\n          <Tab id=\"tab-2\" label=\"Density\">\n            {/* {answerText} */}\n            <div className=\"viztabcontent p10\">\n              <div className=\"smalldesc mb10\">\n                * Darker words indicate larger impact on answer span selection.\n              </div>\n              <div className=\"some-content \">\n                <div className=\"mediumdesc lhmedium\">{denseViz}</div>\n              </div>\n            </div>\n          </Tab>\n          <Tab id=\"tab-2\" label=\"Bar\">\n            {/* {answerText} */}\n            <div className=\"viztabcontent p10\">\n              <div className=\"smalldesc mb10\">\n                * Darker bars indicate larger impact on answer span selection.\n              </div>\n              {this.state.minCharWidth && (\n                <BarViz\n                  minChartWidth={this.state.minCharWidth}\n                  data={this.props.data}\n                ></BarViz>\n              )}\n            </div>\n          </Tab>\n        </Tabs>\n        <div className=\"pt5 smalldesc lhmedium\">\n          The visualizations above indicate how each word in the query and\n          context contributes to the model's selection of an answer span.\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExplainView;\n","import React, { Component } from \"react\";\nimport { Modal } from \"carbon-components-react\";\nimport \"./expandview.css\";\nimport { LeaderLine, animOptions } from \"../helperfunctions/HelperFunctions\";\n\nclass ExpandView extends Component {\n  constructor(props) {\n    super(props);\n    this.data = props.data;\n\n    // console.log(this.props);\n\n    this.state = {\n      data: this.data,\n      showInfoModal: false,\n    };\n    this.blueColor = \"#0062ff\";\n    this.greyColor = \"#c4c3c3\";\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.data !== prevProps.data) {\n      this.removeAllLines();\n      this.drawLines();\n      // console.log(this.lineHolder.length, \" num lines\");\n    }\n    if (this.props.viewChanged !== prevProps.viewChanged) {\n      this.redrawAllLines();\n    }\n  }\n\n  clickTerm(e) {\n    // console.log(e.target.innerHTML);\n    this.props.addQueryTerm(e.target.innerHTML);\n  }\n\n  updateGraph(data) {}\n\n  drawLeaderLine(startElement, endElement, startAnchor, endAnchor) {\n    let lineColor = this.blueColor;\n    let lineWidth = 1.5;\n    let plugType = \"square\";\n    let endPlugType = \"arrow2\";\n\n    let line = new LeaderLine(\n      LeaderLine.pointAnchor(startElement, startAnchor),\n      LeaderLine.pointAnchor(endElement, endAnchor),\n      {\n        color: lineColor,\n        startPlug: plugType,\n        endPlug: endPlugType,\n        startPlugColor: lineColor,\n        endSocketGravity: 400,\n        path: \"arc\",\n        size: lineWidth,\n        hide: true,\n      }\n    );\n    // document.querySelector('.leader-line').style.zIndex = -100\n    animOptions.duration = this.state.animationDuration;\n    line.show(\"draw\", animOptions);\n    this.lineHolder.push({\n      line: line,\n    });\n  }\n\n  removeAllLines(line) {\n    this.lineHolder.forEach(function (each) {\n      each.line.remove();\n    });\n    this.lineHolder = [];\n  }\n\n  redrawAllLines() {\n    this.lineHolder.forEach(function (each) {\n      each.line.position();\n    });\n  }\n  getElement(attributeName, attributeValue) {\n    return document\n      .querySelector(\"div\")\n      .querySelector(\"[\" + attributeName + \"=\" + attributeValue + \"]\");\n  }\n  componentDidMount() {\n    this.lineHolder = [];\n    this.topAnchor = { x: \"50%\", y: 0 };\n    this.bottomAnchor = { x: \"50%\", y: \"100%\" };\n    this.leftAnchor = { x: \"0%\", y: \"50%\" };\n    this.rightAnchor = { x: \"100%\", y: \"50%\" };\n\n    this.drawLines();\n  }\n\n  drawLines() {\n    for (const ex of this.props.data.expansions) {\n      if (ex.expansion) {\n        for (let i = 0; i < ex.expansion.length; i++) {\n          const startId = \"term\" + ex.token_index;\n          const endId = \"subterm\" + ex.token_index + i;\n          const startEl = this.getElement(\"id\", startId);\n          const endEl = this.getElement(\"id\", endId);\n          this.drawLeaderLine(startEl, endEl, this.leftAnchor, this.leftAnchor);\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeAllLines();\n  }\n\n  clickInfo(e) {\n    this.setState({ showInfoModal: !this.state.showInfoModal });\n  }\n\n  render() {\n    let suggestedTermList = [];\n    const data = this.props.data;\n    if (data.expansions && data.terms) {\n      suggestedTermList = data.terms.map((data, index) => {\n        return (\n          <div\n            key={\"expansionterm\" + index}\n            className=\"smalldesc unclickable iblock mr5\"\n          >\n            {data.token}\n          </div>\n        );\n      });\n    }\n    const expansionTermsList = data.expansions.map((expansionData, index) => {\n      const terms = (expansionData.expansion || []).map((data, index) => {\n        return (\n          <div\n            key={\"subterms\" + index}\n            id={\"subterm\" + expansionData.token_index + \"\" + index}\n            className=\"ml10  h100 p5 subtermbox clickable\"\n            onClick={this.clickTerm.bind(this)}\n          >\n            {data.token}\n          </div>\n        );\n      });\n      const boxColor = terms.length > 0 ? this.blueColor : this.greyColor;\n\n      return (\n        <div key={\"termrow\" + index} className=\"iblock h100 termcontainer \">\n          <div className=\"smalldesc lhsmall underline pb3\">\n            <div className=\"tooltip iblock mr5\">\n              {expansionData.pos}\n              <span className=\"expandtooltiptext\">\n                <div className=\"underline boldtext pb3 mb5\">\n                  PART&nbsp;OF&nbsp;SPEECH\n                </div>\n                <div> {(expansionData.pos_desc || \"\").toUpperCase()}</div>\n              </span>\n            </div>\n            <div className=\"tooltip iblock\">\n              {expansionData.named_entity !== \"\"\n                ? \"| \" + expansionData.named_entity\n                : \"\"}\n              <span className=\"expandtooltiptext \">\n                <div className=\"underline boldtext  pb3 mb5\">\n                  NAMED&nbsp;ENTITY\n                </div>\n                <div> {(expansionData.ent_desc || \"\").toUpperCase()}</div>\n              </span>\n            </div>\n          </div>\n\n          <div\n            id={\"term\" + index}\n            className={\n              \"termbox mt10 unclickable \" + (terms.length > 0 ? \"mb5\" : \"\")\n            }\n            style={{\n              color: terms.length > 0 ? \"white\" : \"\",\n              backgroundColor: boxColor,\n            }}\n          >\n            {expansionData.token}\n          </div>\n          <div className=\"\">{terms}</div>\n        </div>\n      );\n    });\n\n    // const subTermsList = this.data.expansions\n    //   .filter((data) => {\n    //     if (data.expansion) {\n    //       return true;\n    //     }\n    //     return false;\n    //   })\n    //   .map((expansionData, termIndex) => {\n    //     const terms = expansionData.expansion.map((data, index) => {\n    //       return (\n    //         <div\n    //           key={\"subterms\" + index}\n    //           id={\"subterm\" + expansionData.token_index + \"\" + index}\n    //           className=\"iblock p5 subtermbox\"\n    //         >\n    //           {data.token}\n    //         </div>\n    //       );\n    //     });\n    //     return (\n    //       <div key={\"subtermrow\" + termIndex} className=\"iblock h100\">\n    //         <div className=\"border subtermgroupbox\">{terms}</div>\n    //       </div>\n    //     );\n    //   });\n\n    return (\n      <div className=\" \">\n        <Modal\n          open={this.state.showInfoModal}\n          modalHeading={\"How does Query Expansion Work?\"}\n          passiveModal={true}\n          size={\"lg\"}\n          aria-label={\"Query expansion info modal\"}\n          modalAriaLabel={\"Query expansion info modal\"}\n          onRequestClose={this.clickInfo.bind(this)}\n          hasScrollingContent={true}\n          // secondaryButtonText={\"Cancel\"}\n        >\n          <div>\n            <div className=\"underline boldmediumtext pb5 mb10\">\n              {\" \"}\n              What is Contextual Query Expansion?{\" \"}\n            </div>\n            Query expansion works as follows. First, a set of rules are used to\n            determine which token in the query to expand. These rules are chosen\n            to improve recall (surface relevant queries) without altering the\n            semantics of the original query. Example rules include only\n            expanding ADJECTIVES AND ADVERBS ; other parts of speech such as\n            nouns, proper nouns or even named entities are not expanded. Once\n            expansion candidates are selected, they are then iteratively masked\n            and a masked language model is used to predict tokens that best\n            complete the sentence given the surrounding tokens. Additional\n            details are provided in the{\" \"}\n            <a target=\"_blank\" href=\"https://arxiv.org/abs/2007.15211\">\n              {\" \"}\n              NeuralQA paper.\n            </a>{\" \"}\n            <div className=\"underline boldmediumtext mt10 pb5 mb10\">\n              {\" \"}\n              How is this Implemented?{\" \"}\n            </div>\n            Part of speech detection is implemented using Spacy NLP. A BERT\n            based masked language model is used for predicting expansion terms\n            (can be selected under advanced options).\n            <br /> <br />\n            *Note contextual query expansion works best when the model is\n            trained on the target (open-domain) dataset.\n          </div>\n        </Modal>\n        <div className=\" mb10\">\n          <span className=\"boldtext\">\n            {\" \"}\n            {suggestedTermList.length} Suggested Expansion Terms{\" \"}\n          </span>\n          <span className=\"mediumdesc\">\n            {\" \"}\n            {this.props.data.took.toFixed(3)} seconds\n          </span>\n          .\n        </div>\n        <div className=\" expandview\">\n          {/* <span className=\"boldtext\"> suggested terms: </span>\n          <span className=\"mediumdesc\"> {suggestedTermList} </span> */}\n          <div className=\"  positionrelative pb5 mediumdesc\">\n            <div className=\"pt10 pb10 underline\">\n              Click any of the expansion candidate terms below to append it to\n              your query\n            </div>\n            <div\n              className=\"whatsthis clickable\"\n              onClick={this.clickInfo.bind(this)}\n            >\n              <span className=\"infocircle\"> &#63;</span> info\n            </div>\n          </div>\n\n          <div className=\"\">{expansionTermsList}</div>\n          <div className=\"smalldesc pt5 lhsmall \">\n            {\" \"}\n            The visualization above indicates how the expansion terms were\n            generated.<br></br>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExpandView;\n","/**\n * @license\n * Copyright 2019 Fast Forward Labs.\n * Written by / Contact : https://github.com/victordibia\n * NeuralQA - NeuralQA: Question Answering on Large Datasets with BERT.\n * Licensed under the MIT License (the \"License\");\n * =============================================================================\n */\n\nimport React, { Component } from \"react\";\nimport {\n  Button,\n  Select,\n  Toggle,\n  Modal,\n  SelectItem,\n  TextInput,\n  TextArea,\n  Loading,\n} from \"carbon-components-react\";\nimport {\n  postJSONData,\n  abbreviateString,\n} from \"../helperfunctions/HelperFunctions\";\nimport ExplainView from \"../explainview/ExplainView\";\nimport ExpandView from \"../expandview/ExpandView\";\nimport \"./queryview.css\";\n\nclass QueryView extends Component {\n  constructor(props) {\n    super(props);\n\n    // console.log(props.data);\n\n    this.options = props.data.options;\n\n    this.state = {\n      apptitle: props.data.intro.title,\n      appsubtitle: props.data.intro.subtitle,\n      passages: { took: 0, highlights: null },\n      answers: { took: 0, answers: null },\n      passageIsLoading: false,\n      answerIsLoading: false,\n      errorStatus: \"\",\n\n      maxdocuments: this.options.maxdocuments.selected,\n      reader: this.options.reader.selected,\n      fragmentsize: this.options.fragmentsize.selected,\n      chunkStride: this.options.stride.selected,\n      retriever: this.options.retriever.selected,\n      expander: this.options.expander.selected,\n      relsnip: this.options.relsnip.selected,\n\n      sampleQA: this.options.samples,\n      selectedExplanation: 0,\n      selectedSampleIndex: 0,\n      explanations: {},\n      showAdvancedView: false,\n      showExplanationsView: props.data.views.explanations,\n      showPassagesView: props.data.views.passages,\n      showExpander: true, //props.data.views.expander,\n\n      expansions: null,\n      expansionterms: new Set([]),\n\n      // showAdvanced: props.data.views.advanced,\n      openAdvancedConfigDrawer: true,\n      showSamples: props.data.views.samples,\n      showAllAnswers: props.data.views.allanswers,\n      showIntro: props.data.views.intro,\n      showInfoModal: false,\n      showExplainerModal: false,\n    };\n\n    this.serverBasePath = props.serverBasePath;\n    this.passageEndpoint = \"/api/documents\";\n    this.answerEndpoint = \"/api/answers\";\n    this.explainEndpoint = \"/api/explain\";\n    this.expandEndpoint = \"/api/expand\";\n    this.interfaceTimedDelay = 400;\n    this.maxStatusElasped = 6; // Remove error/status msgs after maxStatusElasped secs\n    this.documentTitleLength = 150; // Number of characters to display as the title of the snippets\n    this.advancedOptionsDescriptions = [\n      {\n        title: \"Retriever\",\n        value: \"retriever\",\n        description:\n          \"A list of search indexes that will be used to retrieve documents that match the search query. If set to None, the interface will let you provide a document/passage in addition to your question\",\n      },\n      {\n        title: \"Reader\",\n        value: \"reader\",\n        description:\n          \"A Question Answering model that will take in your question and retrieved documents (or provided passsage) and extract an answer to the question if it exists in the document.\",\n      },\n      {\n        title: \"Token Stride\",\n        value: \"chunkStride\",\n        description:\n          \"Token stride specifies the overlap between document chunks. QA reader models have limitations on the maximum size of text tokens they can process in a single pass. Lengthy documents are typically broken down in to smaller document chunks and iteratively processed by the model. \",\n      },\n\n      {\n        title: \"Max Documents\",\n        value: \"maxdocuments\",\n        description: \"Number of documents to return for a retriever query.\",\n      },\n      {\n        title: \"Expander\",\n        value: \"expander\",\n        description:\n          \"Contextual Query Expansion (see <a target='_blank' href='https://arxiv.org/abs/2007.15211' > https://arxiv.org/abs/2007.15211</a>) for identifying additional query terms that can improve recall.\",\n      },\n\n      {\n        title: \"RelSnip\",\n        value: \"relsnip\",\n        description:\n          \"Relevant Snippets (RelSnip) is a method for constructing smaller documents from lengthy documents and is implemented as follows. For each retrieved document, we apply a highlighter (Lucene Unified Highlighter) which breaks the document into fragments and uses the BM25 algorithm to score each fragment as if they were individual documents in the corpus. Next, we concatenate the top n (default 5) fragments as a new document which is then processed by the reader. When Relsnip is set to false, the reader reads the entire document by breaking it into chunks. To maintain decent user experience, we process a maximum of 5 chunks.\",\n      },\n      {\n        title: \"Fragment Size\",\n        value: \"fragmentsize\",\n        description:\n          \"The size (number of characters) of each highlight fragment.\",\n      },\n    ];\n  }\n\n  componentDidMount() {\n    this.askQuestion();\n  }\n\n  resetAnswer() {\n    this.setState({\n      passages: { took: 0, highlights: null },\n      answers: { took: 0, answers: null },\n      errorStatus: \"\",\n      explanations: {},\n      expansions: null,\n      expansionterms: new Set([]),\n    });\n  }\n  resetExplanations() {\n    this.setState({\n      explanations: {},\n    });\n  }\n\n  askQuestion() {\n    this.resetExplanations();\n    let question = document.getElementById(\"queryinput\").value;\n    let context = document.getElementById(\"contextinput\")\n      ? document.getElementById(\"contextinput\").value\n      : null;\n\n    let postData = {\n      max_documents: this.state.maxdocuments,\n      context: context || this.state.sampleQA[0].context,\n      query: question || this.state.sampleQA[0].question,\n      fragment_size: this.state.fragmentsize,\n      reader: this.state.reader,\n      retriever: this.state.retriever,\n      tokenstride: this.state.chunkStride,\n      relsnip: this.state.relsnip,\n      expansionterms: Array.from(this.state.expansionterms),\n    };\n    // console.log(postData);\n    if (this.state.retriever !== \"none\") {\n      this.getPassages(postData);\n    }\n\n    this.getAnswers(postData);\n    this.lastAsked = new Date();\n  }\n\n  getAnswers(postData) {\n    // this.setState({ answers: { \"took\": 0, answers: [] } })\n    let self = this;\n    this.setState({ answerIsLoading: true });\n    let answerUrl = this.serverBasePath + this.answerEndpoint;\n\n    let answers = postJSONData(answerUrl, postData);\n    answers\n      .then((data) => {\n        if (data) {\n          // console.log(data.query);\n          this.setState({\n            answers: data,\n            errorStatus: \"\",\n            expansions: null,\n          });\n          setTimeout(() => {\n            this.setState({ answerIsLoading: false });\n          }, this.interfaceTimedDelay);\n        }\n      })\n      .catch(function (err) {\n        console.log(\"Failed to fetch answers\", err);\n        self.setState({\n          answerIsLoading: false,\n          errorStatus:\n            \"Reader failed to fetch answer. Reader server may need to be restarted. Error msg : \" +\n            err,\n        });\n      });\n  }\n\n  getPassages(postData) {\n    let self = this;\n    this.setState({ passageIsLoading: true });\n    let passageUrl = this.serverBasePath + this.passageEndpoint;\n\n    let passages = postJSONData(passageUrl, postData);\n    passages\n      .then((data) => {\n        // console.log(data);\n\n        if (data.status) {\n          this.setState({ passages: data });\n          // console.log(Object.keys(data));\n        } else {\n        }\n        let errorStatus = data.status\n          ? \"\"\n          : \"Error Fetching Passages. \\n\" + data.errormsg;\n        setTimeout(() => {\n          this.setState({ passageIsLoading: false, errorStatus: errorStatus });\n        }, this.interfaceTimedDelay);\n      })\n      .catch(function (err) {\n        console.log(\"Fetch Error :-S\", err);\n        self.setState({\n          passageIsLoading: false,\n          errorStatus:\n            \"Retriever to fetch documents. Retriever server may need to be restarted.\",\n        });\n      });\n  }\n\n  askQuestionButtonClick(e) {\n    this.askQuestion();\n  }\n\n  inputKeyPress(e) {\n    if (e.keyCode === 13) {\n      this.askQuestion();\n    }\n  }\n\n  toggleSearchConfig(e) {\n    this.setState({\n      openAdvancedConfigDrawer: !this.state.openAdvancedConfigDrawer,\n    });\n  }\n  clickInfo(e) {\n    this.setState({ showInfoModal: !this.state.showInfoModal });\n  }\n  clickSampleQuestion(e) {\n    this.setState(\n      {\n        passages: { took: 0, highlights: [] },\n        answers: { took: 0, answers: [] },\n        selectedSampleIndex: e.target.getAttribute(\"qindex\"),\n      },\n      () => {\n        this.askQuestion();\n      }\n    );\n  }\n\n  getExplanation(selectedAnswerId) {\n    let self = this;\n    const answers = this.state.answers.answers || [];\n    let answerData = answers[selectedAnswerId];\n    // console.log(answerData);\n    let postData = {\n      query: answerData.question,\n      context: answerData.context,\n    };\n    // console.log(postData);\n\n    this.setState({ answerIsLoading: true });\n    let explainUrl = this.serverBasePath + this.explainEndpoint;\n\n    let explanation = postJSONData(explainUrl, postData);\n    explanation\n      .then((data) => {\n        if (data) {\n          let explanationHolder = this.state.explanations;\n          explanationHolder[selectedAnswerId] = data;\n          this.setState({ explanations: explanationHolder });\n          // console.log(data);\n          setTimeout(() => {\n            this.setState({ answerIsLoading: false });\n          }, this.interfaceTimedDelay);\n        }\n      })\n      .catch(function (err) {\n        console.log(\"Fetch Error :-S\", err);\n        self.setState({\n          answerIsLoading: false,\n          errorStatus:\n            \"Failed to fetch explainations. Explaination server may need to be restarted.\",\n        });\n      });\n  }\n\n  getExpansion() {\n    let query = document.getElementById(\"queryinput\").value;\n    let postData = {\n      query: query,\n      expander: this.state.expander,\n    };\n    // this.setState({ answerIsLoading: true });\n    let expandUrl = this.serverBasePath + this.expandEndpoint;\n\n    let expansion = postJSONData(expandUrl, postData);\n    expansion\n      .then((data) => {\n        if (data) {\n          // let explanationHolder = this.state.explanations;\n          // explanationHolder[selectedAnswerId] = data;\n          this.setState({ expansions: data });\n          // console.log(data);\n          // setTimeout(() => {\n          //   this.setState({ answerIsLoading: false });\n          // }, this.interfaceTimedDelay);\n          // let terms = \" \";\n          // for (const ex of data.expansions) {\n          //   if (ex.expansion) {\n          //     for (const row of ex.expansion) {\n          //       terms = terms + row.token + \" \";\n          //     }\n          //   }\n          // }\n\n          // query.value = query.value + terms;\n        }\n      })\n      .catch(function (err) {\n        console.log(\"Fetch Error :-S\", err);\n        // self.setState({\n        //   answerIsLoading: false,\n        //   errorStatus:\n        //     \"Failed to fetch explainations. Explaination server may need to be restarted.\",\n        // });\n      });\n  }\n\n  closeExplainerModal() {\n    this.setState({\n      showExplainerModal: false,\n    });\n  }\n\n  clickExplainButton(e) {\n    let selectedAnswerId = e.target.getAttribute(\"id\");\n    this.getExplanation(selectedAnswerId);\n    this.setState({\n      showExplainerModal: true,\n      selectedExplanation: selectedAnswerId,\n    });\n  }\n\n  expandButtonClick(e) {\n    this.setState({ expansionterms: new Set([]) });\n    this.getExpansion();\n  }\n\n  updateConfigSelectParams(e) {\n    // console.log(e.target.options);\n\n    let configType = e.target.options[e.target.selectedIndex].getAttribute(\n      \"type\"\n    );\n    let selectedValue = e.target.options[e.target.selectedIndex].value;\n\n    // console.log(configType, selectedValue);\n\n    switch (configType) {\n      case \"maxdocuments\":\n        this.setState({ maxdocuments: selectedValue });\n        break;\n      case \"reader\":\n        this.setState({ reader: selectedValue });\n        break;\n      case \"stride\":\n        this.setState({ chunkStride: selectedValue });\n        break;\n      case \"fragmentsize\":\n        this.setState({ fragmentsize: selectedValue });\n        break;\n      case \"retriever\":\n        this.setState({ retriever: selectedValue });\n        break;\n      case \"relsnip\":\n        this.setState({ relsnip: selectedValue });\n        break;\n      case \"expander\":\n        this.setState({ expander: selectedValue });\n        break;\n      default:\n        break;\n    }\n    this.resetAnswer();\n  }\n\n  getOptionItems(option, defaultValue) {\n    let selectItems = this.options[option].options.map((data, i) => {\n      return (\n        <SelectItem\n          key={\"select\" + option + i}\n          value={data.value}\n          text={data.name + \"\"}\n          type={option}\n        />\n      );\n    });\n    let selectElement = (\n      <Select\n        id={option + \"select\"}\n        defaultValue={this.options[option].selected}\n        hideLabel={true}\n        style={{ width: \"100%\" }}\n        onChange={this.updateConfigSelectParams.bind(this)}\n      >\n        {selectItems}\n      </Select>\n    );\n\n    return selectElement;\n  }\n\n  toggleAdvancedOptions(e) {\n    this.setState({ showAdvancedView: !this.state.showAdvancedView });\n  }\n\n  addQueryTerm(term) {\n    let query = document.getElementById(\"exptermslistbox\");\n    let terms = this.state.expansionterms;\n    if (query && !terms.has(term)) {\n      query.style.opacity = \"0\";\n      setTimeout(() => {\n        query.value = query.value + \" \" + term;\n        query.style.opacity = \"1\";\n      }, 400);\n    }\n\n    terms.add(term);\n    this.setState({ expansionterms: terms });\n\n    //\n  }\n\n  removeTermClick(e) {\n    const terms = this.state.expansionterms;\n    // console.log(terms, e.target.getAttribute(\"termvalue\"));\n    terms.delete(e.target.getAttribute(\"termvalue\"));\n    this.setState({ expansionterms: terms });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // if (\n    //   prevState.openAdvancedConfigDrawer !==\n    //     this.state.openAdvancedConfigDrawer ||\n    //   prevState.showAdvancedView !== this.state.showAdvancedView\n    // ) {\n    //   console.log(\"view changed\");\n    //   this;\n    // }\n  }\n\n  render() {\n    const answers = this.state.answers.answers || [];\n    let loadingStatus =\n      this.state.passageIsLoading || this.state.answerIsLoading;\n\n    // Whats this/info box\n    let infoBox = this.advancedOptionsDescriptions.map((data, index) => {\n      return (\n        <div\n          className=\"infodescrow underline pb10 pt5\"\n          key={\"infodesc\" + index}\n        >\n          <div className=\" infodesctitle\">\n            <span className=\"boldtext\"> {data.title}</span>{\" \"}\n            {this.state[data.value] + \"\"}\n          </div>\n          <div\n            className=\" infodescdesc\"\n            dangerouslySetInnerHTML={{ __html: data.description }}\n          />\n        </div>\n      );\n    });\n\n    // Create a list view for passages\n    const documents = this.state.passages[\"highlights\"] || [];\n    let documentList = documents.map((data, index) => {\n      let dataTitle = data.substring(0, this.documentTitleLength);\n      // if (data.highlight[\"name\"] !== undefined) {\n      //   for (let title of data.highlight[\"name\"]) {\n      //     dataTitle = dataTitle + \" ... \" + title;\n      //   }\n      // } else {\n      //   dataTitle = data._source.name;\n      // }\n      // let caseHighlight =\n      //   data.highlight[\"casebody.data.opinions.text\"] || \"No highlight.\";\n\n      return (\n        <div className=\"passagerow flex\" key={\"passagerow\" + index}>\n          <div className=\"answerrowtitletag mr10\"> D{index} </div>\n          <div className=\"flexfull\">\n            <div\n              className=\"passagetitle highlightsection mb10   underline lhmedium\"\n              dangerouslySetInnerHTML={{ __html: dataTitle }}\n            />\n\n            <span\n              className=\"highlightsection iblock lhmedium  \"\n              dangerouslySetInnerHTML={{\n                __html:\n                  \"<span class='excerpttitle mediumdesc'> All highlights: </span> <span class='lhmedium mediumdesc'>\" +\n                  data +\n                  \"</span>\",\n              }}\n            />\n          </div>\n        </div>\n      );\n    });\n\n    // Create list view for answers\n    let answerList = answers\n      .slice(0, this.state.showAllAnswers ? answers.length : 1)\n      .map((data, index) => {\n        return (\n          <div\n            className={\n              \"flex  p10 answerrow \" + (index === 0 ? \"topanswer\" : \"\")\n            }\n            key={\"answerrow\" + index}\n          >\n            <div className=\"answerrowtitletag mr10\"> A{data.index} </div>\n            <div className=\"flexfull\">\n              <div>\n                <div className=\"smalldesc pt5\">\n                  Time: {data.took.toFixed(3)}s |{\" \"}\n                  {(data.probability * 1).toFixed(4)}\n                  {/* | Total Probability {(data.probability * 1).toFixed(4)} [  {((data.start_probability * 1) / 2).toFixed(4)} | {((data.end_probability * 1) / 2).toFixed(4)} ] */}\n                </div>\n                <div className=\"boldtext pt5\">\n                  {\" \"}\n                  <span className=\"answerquote\">&#8220;</span> {data.answer}{\" \"}\n                  <span className=\"pt10 answerquote\">&#8221;</span>{\" \"}\n                </div>\n                {\n                  <div>\n                    <div\n                      className=\"p10 mt10 mb10  mediumdesc lhmedium contextrow lightgreyhighlight\"\n                      dangerouslySetInnerHTML={{ __html: data.context }}\n                    />\n                    {this.state.explanations[index] && (\n                      <ExplainView\n                        data={this.state.explanations[index]}\n                      ></ExplainView>\n                    )}\n                    {this.state.showExplanationsView &&\n                      !this.state.explanations[index] && (\n                        <Button\n                          id={index}\n                          onClick={this.clickExplainButton.bind(this)}\n                          size=\"small\"\n                        >\n                          Explain\n                        </Button>\n                      )}\n                  </div>\n                }\n              </div>\n            </div>\n          </div>\n        );\n      });\n    // Create sample qa passages for None QA\n    let qaSamples = this.state.sampleQA.map((data, index) => {\n      return (\n        <div\n          qindex={index}\n          onClick={this.clickSampleQuestion.bind(this)}\n          key={\"qasample\" + index}\n          className={\n            \"samplequestionrow mediumdesc clickable iblock \" +\n            (this.state.selectedSampleIndex + \"\" === index + \"\"\n              ? \" selected \"\n              : \" \")\n          }\n        >\n          {data.question}\n        </div>\n      );\n    });\n\n    let askedElapsed =\n      (new Date() - this.lastAsked) / 1000 > this.maxStatusElasped;\n\n    // Create configuration bar\n    let configBar = (\n      <div\n        ref=\"modelconfigbar\"\n        style={{ zIndex: 100 }}\n        className={\"w100 pl10  pb10 unselectable greyhighlight modelconfigbar\"}\n      >\n        <div className=\"positionrelative  \">\n          <div className=\" pt10 pb10 underline\">\n            Select QA model configuration.\n          </div>\n          <div\n            className=\"whatsthis clickable\"\n            onClick={this.clickInfo.bind(this)}\n          >\n            <span className=\"infocircle\"> &#63;</span> info\n          </div>\n        </div>\n        <div className=\"w100   displayblock  \">\n          <div className=\"  iblock mr10\">\n            <div className=\"mediumdesc pb7 pt5\">\n              {\" \"}\n              {this.options.retriever.title}{\" \"}\n              <span className=\"boldtext\"> {this.state.retriever} </span>{\" \"}\n            </div>\n            {this.getOptionItems(\"retriever\", \"\")}\n          </div>\n\n          <div className=\"pl10 borderleftdash iblock mr10\">\n            <div className=\"mediumdesc pb7 pt5\">\n              {\" \"}\n              {this.options.reader.title}{\" \"}\n              <span className=\"boldtext\">\n                {\" \"}\n                {abbreviateString(this.state.reader, 16)}{\" \"}\n              </span>{\" \"}\n            </div>\n            {this.getOptionItems(\"reader\", \"\")}\n          </div>\n\n          <div className=\"iblock mr10\">\n            <div className=\"mediumdesc pb7 pt5\">\n              {\" \"}\n              {this.options.stride.title}\n              <span className=\"boldtext\"> {this.state.chunkStride} </span>{\" \"}\n            </div>\n            {this.getOptionItems(\"stride\", \"\")}\n          </div>\n\n          {/* show IR search pipeline config is dataset is not None  */}\n          {this.state.retriever !== \"none\" && (\n            <div className=\"pl10 borderleftdash iblock mr10 \">\n              <div className=\"mediumdesc pb7 pt5\">\n                {\" \"}\n                {this.options.maxdocuments.title}{\" \"}\n                <span className=\"boldtext\"> {this.state.maxdocuments} </span>{\" \"}\n              </div>\n              {this.getOptionItems(\"maxdocuments\", \"\")}\n            </div>\n          )}\n\n          {this.state.showExpander && (\n            <div className=\" iblock mr10\">\n              <div className=\"mediumdesc pb7 pt5\">\n                {\" \"}\n                {this.options.expander.title}{\" \"}\n                <span className=\"boldtext\">\n                  {\" \"}\n                  {abbreviateString(this.state.expander + \"\", 16)}{\" \"}\n                </span>{\" \"}\n              </div>\n              {this.getOptionItems(\"expander\", \"\")}\n            </div>\n          )}\n\n          {this.state.retriever !== \"none\" && (\n            <div className=\"iblock mr10 \">\n              <div className=\"mediumdesc pb7 pt5\">\n                {\" \"}\n                {this.options.fragmentsize.title}{\" \"}\n                <span className=\"boldtext\"> {this.state.fragmentsize} </span>{\" \"}\n              </div>\n              {this.getOptionItems(\"fragmentsize\", \"\")}\n            </div>\n          )}\n\n          {this.state.retriever !== \"none\" && (\n            <div className=\" iblock mr10\">\n              <div className=\"mediumdesc pb7 pt5\">\n                {\" \"}\n                {this.options.relsnip.title}{\" \"}\n                <span className=\"boldtext\">\n                  {\" \"}\n                  {abbreviateString(this.state.relsnip + \"\", 16)}{\" \"}\n                </span>{\" \"}\n              </div>\n              {this.getOptionItems(\"relsnip\", \"\")}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n\n    const expansionTermsList = Array.from(this.state.expansionterms).map(\n      (data, index) => {\n        return (\n          <div key={\"expterms\" + index} className=\"exptermbox iblock mr5\">\n            <div className=\"iblock exptermboxdata unclickable\">{data}</div>\n            <div\n              onClick={this.removeTermClick.bind(this)}\n              termvalue={data}\n              className=\"iblock termboxclose\"\n            >\n              x\n            </div>\n          </div>\n        );\n      }\n    );\n\n    return (\n      <div>\n        <Modal\n          open={this.state.showInfoModal}\n          modalHeading={\"Description of advanced options\"}\n          passiveModal={true}\n          size={\"lg\"}\n          aria-label={\"Info Modal\"}\n          modalAriaLabel={\"Info Modal\"}\n          onRequestClose={this.clickInfo.bind(this)}\n          hasScrollingContent={true}\n          // secondaryButtonText={\"Cancel\"}\n        >\n          {infoBox}\n        </Modal>\n\n        {/* <Modal\n          open={this.state.showExplainerModal}\n          modalHeading={\"Model Explanation\"}\n          passiveModal={true}\n          size={\"lg\"}\n          aria-label={\"Explaination Modal\"}\n          modalAriaLabel={\"Explanation Modal\"}\n          onRequestClose={this.closeExplainerModal.bind(this)}\n          hasScrollingContent={true}\n          // secondaryButtonText={\"Cancel\"}\n        > */}\n        {/* {Object.keys(this.state.explanations).length > 0 && (\n          <ExplainView\n            explanationData={\n              this.state.explanations[this.state.selectedExplanation]\n            }\n            selectedExplanation={this.state.selectedExplanation}\n          ></ExplainView>\n        )} */}\n        {/* </Modal> */}\n        {/* <ExpandView data={this.state.expansions}></ExpandView> */}\n\n        {this.state.showIntro && (\n          <div className=\"clearfix mynotif positionrelative  mt10 h100 lh10  lightbluehightlight maxh16  mb10\">\n            {this.props.data.views.advanced && (\n              <div className=\" floatright lightgreyhighlight ml10  pr10 pl10 pb10 \">\n                {/* <div className=\"mediumdesc boldtext\"> Advanced Options</div> */}\n\n                <div className=\"boldtext  iblock \">\n                  <Toggle\n                    id=\"advancedoptionstoggle\"\n                    className=\"smalldesc boldtext mr10\"\n                    labelA=\"Off\"\n                    labelB=\"On\"\n                    defaultToggled={this.state.showAdvancedView}\n                    // onChange action('onChange'),\n                    onToggle={this.toggleAdvancedOptions.bind(this)}\n                  ></Toggle>\n                </div>\n\n                <div className=\"mediumdesc boldtext\"> Advanced Options</div>\n              </div>\n            )}\n            <span className=\"boldtext mb5\">{this.state.apptitle}</span>\n            <br />\n            {this.state.appsubtitle}\n          </div>\n        )}\n\n        <div\n          className={\n            \" mb10\" + (this.state.showAdvancedView ? \"\" : \" displaynone\")\n          }\n        >\n          {/* config panel and content */}\n          <div\n            onClick={this.toggleSearchConfig.bind(this)}\n            className=\"unselectable mt10 p10 clickable  flex greymoreinfo\"\n          >\n            <div className=\"iblock flexfull minwidth485\">\n              <strong>\n                {\" \"}\n                {!this.state.openAdvancedConfigDrawer && (\n                  <span>&#x25BC; </span>\n                )}{\" \"}\n                {this.state.openAdvancedConfigDrawer && <span>&#x25B2; </span>}{\" \"}\n              </strong>\n              Advanced Options\n            </div>\n            <div className=\"iblock   \">\n              <div className=\"iblock mr5\">\n                {\" \"}\n                <span className=\"boldtext\"> </span>\n              </div>\n              <div className=\"iblock\">\n                <div className=\"smalldesc\">\n                  {\" \"}\n                  {this.state.maxdocuments} Results |{\" \"}\n                  {this.state.reader.toUpperCase()}{\" \"}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {\n            <div\n              className={\n                \"flex underline p10 modelconfigdiv w100  \" +\n                (this.state.openAdvancedConfigDrawer ? \"\" : \" displaynone\")\n              }\n            >\n              {/* <div> Advanced configuration settings </div> */}\n              <div className=\"w100\"> {configBar}</div>\n            </div>\n          }\n        </div>\n\n        {this.state.retriever === \"none\" && this.state.showSamples && (\n          <div className=\" mb10\">\n            <div className=\"smalldesc p5\">\n              {\" \"}\n              Select any sample question/passage pair below{\" \"}\n            </div>\n            {qaSamples}\n          </div>\n        )}\n        <div className=\"mt5 mt10 mb10 mediumdesc\"> Enter question </div>\n        <div className=\"flex flexwrap searchbar\">\n          <div\n            // style={{ minWidth: \"250px\" }}\n            key={\"queryinput\" + this.state.selectedSampleIndex}\n            className=\"flex80 flexwrapitem\"\n          >\n            <TextInput\n              id=\"queryinput\"\n              defaultValue={\n                this.state.sampleQA[this.state.selectedSampleIndex].question\n              }\n              hideLabel={true}\n              labelText=\"Hi there\"\n              onKeyDown={this.inputKeyPress.bind(this)}\n              className=\"\"\n              placeholder=\"Enter question. e.g. Which cases cite dwayne vs the united states.\"\n            ></TextInput>\n          </div>\n\n          <div className=\"flexwrapitem  \">\n            {\" \"}\n            {this.state.expander !== \"none\" && (\n              <Button\n                className=\"mr2 flex80\"\n                onClick={this.expandButtonClick.bind(this)}\n                size=\"field\"\n              >\n                {\" \"}\n                Expand Query?\n              </Button>\n            )}\n            <Button\n              onClick={this.askQuestionButtonClick.bind(this)}\n              size=\"field\"\n            >\n              {\" \"}\n              Get Answer{\" \"}\n            </Button>\n          </div>\n        </div>\n\n        {this.state.expansionterms.size > 0 && (\n          <div id=\"exptermslistbox\" className=\"mt5 transitiono3s\">\n            <span className=\"boldtext selectedtermslabel unclickable\">\n              {\" \"}\n              expansion terms:{\" \"}\n            </span>\n            {expansionTermsList}\n          </div>\n        )}\n\n        {this.state.expansions && this.state.expansions.terms && (\n          <div className=\" pt10\">\n            <ExpandView\n              data={this.state.expansions}\n              viewChanged={\n                this.state.openAdvancedConfigDrawer +\n                \"\" +\n                this.state.showAdvancedView +\n                this.state.expansionterms.size\n              }\n              addQueryTerm={this.addQueryTerm.bind(this)}\n            ></ExpandView>\n          </div>\n        )}\n\n        {/* {this.state.sampleQA[this.state.selectedSampleIndex].context} */}\n\n        {this.state.retriever === \"none\" && (\n          <div\n            key={\"contexttextarea\" + this.state.selectedSampleIndex}\n            className=\"mt10\"\n          >\n            <div className=\"mt5 mb10 mediumdesc\"> Enter passage </div>\n            <TextArea\n              id=\"contextinput\"\n              className=\"contextinputarea\"\n              defaultValue={\n                this.state.sampleQA[this.state.selectedSampleIndex].context\n              }\n              labelText=\"Enter a passage\"\n              hideLabel={true}\n            ></TextArea>\n          </div>\n        )}\n\n        <div className=\"mediumdesc pt7 pb7\">\n          {this.state.answerIsLoading && (\n            <span> Asking BERT for answers ... </span>\n          )}\n        </div>\n        {!askedElapsed && this.state.errorStatus.length > 1 && (\n          <div className=\"errormessage\">{this.state.errorStatus}</div>\n        )}\n\n        {answerList.length > 0 && (\n          <div>\n            {/* <Loading\n                            active={this.state.answerIsLoading}\n                            description=\"Active loading indicator\" withOverlay={true}\n                        /> */}\n            <div className=\"flex mt10 \">\n              <div\n                className=\"loaderbox\"\n                style={{\n                  opacity: loadingStatus ? 1 : 0,\n                  width: loadingStatus ? \"34px\" : \"0px\",\n                }}\n              >\n                <Loading\n                  className=\" \"\n                  active={true}\n                  small={true}\n                  withOverlay={false}\n                >\n                  {\" \"}\n                </Loading>\n              </div>\n\n              <div className=\"flexfull  sectionheading\">\n                <span className=\"boldtext\">\n                  {\" \"}\n                  {answerList.length} Answer{answerList.length > 1 ? \"s\" : \"\"}{\" \"}\n                  returned{\" \"}\n                </span>\n                {!this.state.answerIsLoading && (\n                  <span className=\"mediumdesc\">\n                    {\" \"}\n                    {this.state.answers[\"took\"].toFixed(3)} seconds.{\" \"}\n                  </span>\n                )}\n              </div>\n              <div className=\"lh2m\">\n                {this.state.answerIsLoading && (\n                  <span className=\"mediumdesc\"> Loading answers ... </span>\n                )}\n              </div>\n            </div>\n            <div>{answerList}</div>\n          </div>\n        )}\n        {/* {  !askedElapsed &&} */}\n        {this.state.answers.answers &&\n          this.state.answers.answers.length === 0 &&\n          !this.state.answerIsLoading && (\n            <div className=\"p10 orangehighlight\">No answers found.</div>\n          )}\n\n        {(this.state.showPassagesView && documentList.length) > 0 && (\n          <div>\n            <div className=\"mt10 mb10\">\n              <span className=\"boldtext\">\n                {\" \"}\n                {documents.length} Documents returned.{\" \"}\n              </span>\n              {this.state.passageIsLoading && (\n                <span className=\"mediumdesc\"> Loading passages ... </span>\n              )}\n              {!this.state.passageIsLoading && (\n                <span className=\"mediumdesc\">\n                  {\" \"}\n                  {this.state.passages[\"took\"] / 1000} seconds{\" \"}\n                </span>\n              )}\n            </div>\n            <div className=\"passagebox  mt10\">{documentList}</div>\n          </div>\n        )}\n\n        {!askedElapsed &&\n          this.state.passages.highlights &&\n          this.state.passages.highlights.length === 0 &&\n          this.state.retriever !== \"none\" &&\n          !this.state.passageIsLoading && (\n            <div className=\"p10 mt5 orangehighlight\">\n              Your query did not match any passages. Try a different query.\n            </div>\n          )}\n\n        {/* {askedElapsed + \"\"} bingo */}\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default QueryView;\n","/**\n * @license\n * Copyright 2019 Fast Forward Labs.  \n * Written by / Contact : https://github.com/victordibia\n * NeuralQA - NeuralQA: Question Answering on Large Datasets with BERT.\n * Licensed under the MIT License (the \"License\"); \n * =============================================================================\n */\n\n\nimport React, { Component } from \"react\";\nimport {\n    // NavLink\n} from \"react-router-dom\";\n// import { LogoGithub16 } from '@carbon/icons-react';\n\nimport \"./header.css\"\n\nclass Header extends Component {\n    constructor(props) {\n        super(props)\n        this.appName = props.data.appname || \"NeuralQA\"\n        this.appDescription = props.data.appdescription || \" Question Answering on Large Datasets.\"\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"headermain\" aria-label={this.appDescription}>\n                    <div className=\"container-fluid w100 headerrow pl10 \">\n                        <div className=\"flex    h100\">\n                            <div className=\"h100   flex flexjustifycenter mr10  \">\n                                <a href={process.env.PUBLIC_URL + \"/#\"}>\n                                    <img className=\"headericon\" src=\"images/icon.png\" alt=\"NeuralQA logo\" />\n\n                                </a>\n                            </div>\n                            <div className=\"h100 apptitle  flex flexjustifycenter  mr10\">\n                                <div className=\"whitetext boldtext  iblock mr10\">  {this.appName} </div>\n                            </div>\n                            {/* <div className=\"h100   flex flexjustifycenter  navbarlinks \">\n                                <NavLink exact to=\"/\"> NeuralQA</NavLink>\n                            </div> */}\n                            {/* <div className=\"h100   flex flexjustifycenter   navbarlinks mr10\">\n                                <a className=\" dispalyblock h100  \" href=\"https://github.com/victordibia/qa/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <LogoGithub16 className=\" whitefill gitlogo  \"></LogoGithub16>\n                                    <span className=\"gitlogotext\">Git</span><span className=\" apptitle\">hub</span>\n                                </a>\n                            </div> */}\n                            {/* <div className=\"h100   flex flexjustifycenter   navbarlinks mr10\">\n                                <a className=\" dispalyblock h100  \" href=\"https://github.com/victordibia/qa/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <LogoGithub16 className=\" whitefill gitlogo  \"></LogoGithub16>\n                                    <span className=\"gitlogotext\">Git</span><span className=\" apptitle\">hub</span>\n                                </a>\n                            </div> */}\n                        </div>\n\n                    </div>\n                </div>\n                <div></div>\n                <div className=\"headerboost\">  </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Header;","/**\n * @license\n * Copyright 2019 Fast Forward Labs.  \n * Written by Victor Dibia / Contact : https://github.com/victordibia\n * CaseQA - CaseQA: Question Answering on Large Datasets with BERT.\n * Licensed under the MIT License (the \"License\"); \n * =============================================================================\n */\n\n\nimport React, { Component } from \"react\";\nimport \"./footer.css\"\n\nclass Footer extends Component {\n    render() {\n        return (\n            <div style={{ zIndex: 999000 }} className=\"centerpage pl10\">\n                &copy; NeuralQA 2020. Learn more on <a href=\"https://github.com/victordibia/neuralqa\" target=\"blank\">Github</a>.\n            </div>\n        );\n    }\n}\n\nexport default Footer;","import React, { Component } from \"react\";\nimport \"./testview.css\";\nimport BarViz from \"../barviz/BarViz\";\n\nclass TestView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.data = require(\"./ex.json\");\n    // this.data.gradients = this.data.gradients.concat(this.data.gradients);\n    // console.log(this.data);\n  }\n  componentDidMount() {\n    this.barVizWidth = document.getElementById(\"barvizcontainer\").offsetWidth;\n    // console.log(this.barVizWidth);\n  }\n\n  render() {\n    return (\n      <div id=\"barvizcontainer\" className=\"  \">\n        <BarViz data={this.data} minChartWidth={700}></BarViz>\n      </div>\n    );\n  }\n}\n\nexport default TestView;\n","/**\n * @license\n * Copyright 2019 Fast Forward Labs.\n * Written by Victor Dibia / Contact : https://github.com/victordibia\n * CaseQA - CaseQA: Question Answering on Large Datasets with BERT.\n * Licensed under the MIT License (the \"License\");\n * =============================================================================\n */\n\nimport React, { Component } from \"react\";\nimport { getJSONData, sampleConfig } from \"./helperfunctions/HelperFunctions\";\nimport { Route, HashRouter } from \"react-router-dom\";\n\nimport QueryView from \"./queryview/QueryView\";\nimport Header from \"./header/Header\";\nimport Footer from \"./footer/Footer\";\nimport { createBrowserHistory } from \"history\";\nimport TestView from \"./testview/TestView\";\n// import TestView from \"./testview/TestView\";\n\nconst history = createBrowserHistory({\n  basename: \"\", // The base URL of the app (see below)\n  forceRefresh: false, // Set true to force full page refreshes\n  keyLength: 6, // The length of location.key\n  // A function to use to confirm navigation with the user (see below)\n  getUserConfirmation: (message, callback) => callback(window.confirm(message)),\n});\n\nhistory.listen((location) => {\n  // console.log(location.pathname, location.hash)\n});\n\nlet linkHolder = {};\n\nfunction updateLh(location) {\n  if (location.hash in linkHolder) {\n    linkHolder[location.hash] = linkHolder[location.hash] + 1;\n  } else {\n    linkHolder[location.hash] = 0;\n  }\n}\n\nhistory.listen((location) => {\n  updateLh(location);\n});\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      config: null,\n    };\n    updateLh(window.location);\n\n    this.serverBasePath =\n      window.location.protocol + \"//\" + window.location.host;\n    // this.serverBasePath = \"http://localhost:5000\";\n    this.configEndpoint = \"/api/config\";\n  }\n\n  componentDidMount() {\n    let configUrl = this.serverBasePath + this.configEndpoint;\n    let config = getJSONData(configUrl);\n    let self = this;\n    config\n      .then((data) => {\n        if (data) {\n          this.setState({ config: data });\n        }\n      })\n      .catch(function (err) {\n        console.log(\"Failed to fetch config, using default config.\", err);\n        self.setState({ config: sampleConfig() });\n      });\n  }\n  render() {\n    const mQueryView = (props) => {\n      return (\n        <QueryView\n          data={this.state.config.queryview}\n          serverBasePath={this.serverBasePath}\n        />\n      );\n    };\n    return (\n      <HashRouter>\n        {this.state.config && (\n          <div>\n            <Header data={this.state.config.header}></Header>\n            <main className=\"container-fluid p10\">\n              <Route exact path=\"/\" component={mQueryView} />\n              <Route exact path=\"/ex\" component={TestView} />\n            </main>\n          </div>\n        )}\n\n        <div id=\"footer\">\n          <Footer />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default Main;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './components/template.scss';\nimport './components/template.css';\nimport App from './components/Main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}